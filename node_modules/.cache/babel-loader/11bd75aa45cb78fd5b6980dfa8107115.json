{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saisr\\\\Desktop\\\\exercise-tracker-master\\\\client\\\\src\\\\components\\\\containers\\\\EditProfile.js\";\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { getProfile as getProfileAction, updateProfile as updateProfileAction, createProfile as createProfileAction } from '../../actions/profile';\nimport { Column } from '../grid/Column';\nimport { H1 } from '../typography/Headings';\nimport { Divider } from '../layout/Divider';\nimport Spinner from '../layout/Spinner';\nimport { TextInput } from '../forms/TextInput';\nimport { Row } from '../grid/Row';\nimport { Box } from '../grid/Box';\nimport { Copy } from '../typography/Copy';\nimport { Button } from '../buttons/Button';\nimport { setAlert as setAlertAction } from '../../actions/alert';\nconst Container = styled.div`\n  margin-top: 48px;\n  background-color: ${({\n  theme\n}) => theme.darkerGrey};\n  padding: 24px;\n  position: relative;\n`;\nconst ProfileContainer = styled(Box)`\n  background-color: ${({\n  theme\n}) => theme.darkestGrey};\n  border-radius: 5px;\n  padding: 24px;\n  margin: 24px;\n  width: calc(100% - 48px);\n\n  @media (max-width: 768px) {\n    width: calc(100% - 24px);\n    margin: 14px;\n    padding: 12px;\n  }\n`;\nconst InputRow = styled(Row)`\n  background-color: ${({\n  theme\n}) => theme.darkerGrey};\n  padding: 12px;\n  text-align: center;\n`;\nconst StyledCopy = styled(Copy)`\n  margin: 12px;\n`;\nconst initialState = {\n  dailyCaloriesGoal: 0,\n  bio: '',\n  activities: ''\n};\n\nconst EditProfile = ({\n  profile: {\n    profile,\n    loading\n  },\n  match: {\n    params\n  },\n  history,\n  getProfile,\n  updateProfile,\n  createProfile,\n  setAlert\n}) => {\n  const data = _.isNull(profile) ? initialState : profile;\n  const [formData, setFormData] = useState(data);\n  useEffect(() => {\n    getProfile(params.id);\n\n    if (profile) {\n      setFormData(profile);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n\n  if (loading && profile === null) {\n    return /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 12\n      }\n    });\n  }\n\n  const onChange = ({\n    target\n  }) => {\n    setFormData({ ...formData,\n      [target.name]: target.value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (profile) {\n      if (_.isEqual(formData, profile)) {\n        setAlert('You have not made any changes', 'danger', 2000);\n      } else {\n        updateProfile(formData, history);\n      }\n    } else {\n      createProfile(formData, history);\n    }\n  };\n\n  const {\n    dailyCaloriesGoal,\n    bio,\n    activities\n  } = formData;\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(H1, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, profile ? 'Edit' : 'Create', \" Profile\"), /*#__PURE__*/React.createElement(Divider, {\n    color: \"grey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(ProfileContainer, {\n    as: \"form\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    type: \"number\",\n    id: \"dailyCaloriesGoal\",\n    label: \"Daily Calories Goal\",\n    value: dailyCaloriesGoal,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(InputRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    type: \"text\",\n    id: \"bio\",\n    value: bio,\n    label: \"Bio\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(InputRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    type: \"text\",\n    id: \"activities\",\n    label: \"Activities\",\n    value: activities,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(StyledCopy, {\n    small: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, \"Keep activities comma separated\")), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n};\n\nEditProfile.propTypes = {\n  getProfile: PropTypes.func,\n  updateProfile: PropTypes.func,\n  createProfile: PropTypes.func,\n  setAlert: PropTypes.func,\n  profile: PropTypes.object,\n  match: PropTypes.object,\n  history: PropTypes.object\n};\n\nconst mapState = ({\n  profile,\n  user\n}) => ({\n  profile,\n  user\n});\n\nexport default connect(mapState, {\n  getProfile: getProfileAction,\n  updateProfile: updateProfileAction,\n  createProfile: createProfileAction,\n  setAlert: setAlertAction\n})(EditProfile);","map":{"version":3,"sources":["C:/Users/saisr/Desktop/exercise-tracker-master/client/src/components/containers/EditProfile.js"],"names":["React","useEffect","useState","styled","connect","PropTypes","_","getProfile","getProfileAction","updateProfile","updateProfileAction","createProfile","createProfileAction","Column","H1","Divider","Spinner","TextInput","Row","Box","Copy","Button","setAlert","setAlertAction","Container","div","theme","darkerGrey","ProfileContainer","darkestGrey","InputRow","StyledCopy","initialState","dailyCaloriesGoal","bio","activities","EditProfile","profile","loading","match","params","history","data","isNull","formData","setFormData","id","onChange","target","name","value","onSubmit","e","preventDefault","isEqual","propTypes","func","object","mapState","user"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nimport {\n  getProfile as getProfileAction,\n  updateProfile as updateProfileAction,\n  createProfile as createProfileAction,\n} from '../../actions/profile';\nimport { Column } from '../grid/Column';\nimport { H1 } from '../typography/Headings';\nimport { Divider } from '../layout/Divider';\nimport Spinner from '../layout/Spinner';\nimport { TextInput } from '../forms/TextInput';\nimport { Row } from '../grid/Row';\nimport { Box } from '../grid/Box';\nimport { Copy } from '../typography/Copy';\nimport { Button } from '../buttons/Button';\nimport { setAlert as setAlertAction } from '../../actions/alert';\n\nconst Container = styled.div`\n  margin-top: 48px;\n  background-color: ${({ theme }) => theme.darkerGrey};\n  padding: 24px;\n  position: relative;\n`;\n\nconst ProfileContainer = styled(Box)`\n  background-color: ${({ theme }) => theme.darkestGrey};\n  border-radius: 5px;\n  padding: 24px;\n  margin: 24px;\n  width: calc(100% - 48px);\n\n  @media (max-width: 768px) {\n    width: calc(100% - 24px);\n    margin: 14px;\n    padding: 12px;\n  }\n`;\n\nconst InputRow = styled(Row)`\n  background-color: ${({ theme }) => theme.darkerGrey};\n  padding: 12px;\n  text-align: center;\n`;\n\nconst StyledCopy = styled(Copy)`\n  margin: 12px;\n`;\n\nconst initialState = {\n  dailyCaloriesGoal: 0,\n  bio: '',\n  activities: '',\n};\n\nconst EditProfile = ({\n  profile: { profile, loading },\n  match: { params },\n  history,\n  getProfile,\n  updateProfile,\n  createProfile,\n  setAlert,\n}) => {\n  const data = _.isNull(profile) ? initialState : profile;\n  const [formData, setFormData] = useState(data);\n\n  useEffect(() => {\n    getProfile(params.id);\n    if (profile) {\n      setFormData(profile);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (loading && profile === null) {\n    return <Spinner />;\n  }\n\n  const onChange = ({ target }) => {\n    setFormData({\n      ...formData,\n      [target.name]: target.value,\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (profile) {\n      if (_.isEqual(formData, profile)) {\n        setAlert('You have not made any changes', 'danger', 2000);\n      } else {\n        updateProfile(formData, history);\n      }\n    } else {\n      createProfile(formData, history);\n    }\n  };\n\n  const { dailyCaloriesGoal, bio, activities } = formData;\n\n  return (\n    <Container>\n      <Column>\n        <H1 color=\"primary\">{profile ? 'Edit' : 'Create'} Profile</H1>\n        <Divider color=\"grey\" />\n      </Column>\n      <ProfileContainer as=\"form\" onSubmit={onSubmit}>\n        <InputRow>\n          <TextInput\n            type=\"number\"\n            id=\"dailyCaloriesGoal\"\n            label=\"Daily Calories Goal\"\n            value={dailyCaloriesGoal}\n            onChange={onChange}\n          />\n        </InputRow>\n        <InputRow>\n          <TextInput\n            type=\"text\"\n            id=\"bio\"\n            value={bio}\n            label=\"Bio\"\n            onChange={onChange}\n          />\n        </InputRow>\n        <InputRow>\n          <TextInput\n            type=\"text\"\n            id=\"activities\"\n            label=\"Activities\"\n            value={activities}\n            onChange={onChange}\n          />\n          <StyledCopy small>Keep activities comma separated</StyledCopy>\n        </InputRow>\n        <Button type=\"submit\">Submit</Button>\n      </ProfileContainer>\n    </Container>\n  );\n};\n\nEditProfile.propTypes = {\n  getProfile: PropTypes.func,\n  updateProfile: PropTypes.func,\n  createProfile: PropTypes.func,\n  setAlert: PropTypes.func,\n  profile: PropTypes.object,\n  match: PropTypes.object,\n  history: PropTypes.object,\n};\n\nconst mapState = ({ profile, user }) => ({\n  profile,\n  user,\n});\n\nexport default connect(mapState, {\n  getProfile: getProfileAction,\n  updateProfile: updateProfileAction,\n  createProfile: createProfileAction,\n  setAlert: setAlertAction,\n})(EditProfile);\n"]},"metadata":{},"sourceType":"module"}