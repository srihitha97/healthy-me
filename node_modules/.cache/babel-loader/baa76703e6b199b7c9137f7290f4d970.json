{"ast":null,"code":"import axios from 'axios';\nimport { LOGIN_SUCCESS, LOGIN_FAIL, REGISTER_SUCCESS, REGISTER_FAIL, LOAD_USER, AUTH_ERROR, LOGOUT, CLEAR_PROFILE, CLEAR_WORKOUT } from './types';\nimport { setAlert } from './alert';\nimport { setAuthToken } from '../utils/setAuthToken';\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get('/api/auth'); // load user into state\n\n    dispatch({\n      type: LOAD_USER,\n      payload: res.data\n    });\n  } catch (error) {\n    // removes user object from state\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\nexport const loginUser = formData => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = JSON.stringify(formData);\n    const {\n      data\n    } = await axios.post('/api/auth', body, config); // update state with user token\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: data\n    }); // load user into state\n\n    dispatch(loadUser());\n  } catch (error) {\n    var _error$response;\n\n    const {\n      errors\n    } = error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data;\n    console.log({\n      errors\n    });\n\n    if (errors) {\n      errors.forEach((error, i) => dispatch(setAlert(error.msg, 'danger', (i + 1) * 1000)));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\nexport const createUser = formData => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = JSON.stringify(formData);\n    const {\n      data\n    } = await axios.post('/api/users', body, config); // update state with user token\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: data\n    }); // load user into state\n\n    dispatch(loadUser());\n  } catch (error) {\n    var _error$response2;\n\n    const {\n      errors\n    } = error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data;\n\n    if (errors) {\n      errors.forEach((error, i) => dispatch(setAlert(error.msg, 'danger', (i + 1) * 1000)));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  dispatch({\n    type: LOGOUT\n  });\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n  dispatch({\n    type: CLEAR_WORKOUT\n  });\n};","map":{"version":3,"sources":["C:/Users/saisr/Desktop/exercise-tracker-master/client/src/actions/user.js"],"names":["axios","LOGIN_SUCCESS","LOGIN_FAIL","REGISTER_SUCCESS","REGISTER_FAIL","LOAD_USER","AUTH_ERROR","LOGOUT","CLEAR_PROFILE","CLEAR_WORKOUT","setAlert","setAuthToken","loadUser","dispatch","localStorage","token","res","get","type","payload","data","error","loginUser","formData","config","headers","body","JSON","stringify","post","errors","response","console","log","forEach","i","msg","createUser","logout"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOAD_USER,\n  AUTH_ERROR,\n  LOGOUT,\n  CLEAR_PROFILE,\n  CLEAR_WORKOUT,\n} from './types';\nimport { setAlert } from './alert';\nimport { setAuthToken } from '../utils/setAuthToken';\n\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n  try {\n    const res = await axios.get('/api/auth');\n\n    // load user into state\n    dispatch({\n      type: LOAD_USER,\n      payload: res.data,\n    });\n  } catch (error) {\n    // removes user object from state\n    dispatch({ type: AUTH_ERROR });\n  }\n};\n\nexport const loginUser = formData => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const body = JSON.stringify(formData);\n\n    const { data } = await axios.post('/api/auth', body, config);\n\n    // update state with user token\n    dispatch({ type: LOGIN_SUCCESS, payload: data });\n\n    // load user into state\n    dispatch(loadUser());\n  } catch (error) {\n    const { errors } = error?.response?.data;\n    console.log({ errors });\n\n    if (errors) {\n      errors.forEach((error, i) =>\n        dispatch(setAlert(error.msg, 'danger', (i + 1) * 1000))\n      );\n    }\n\n    dispatch({ type: LOGIN_FAIL });\n  }\n};\n\nexport const createUser = formData => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const body = JSON.stringify(formData);\n\n    const { data } = await axios.post('/api/users', body, config);\n\n    // update state with user token\n    dispatch({ type: REGISTER_SUCCESS, payload: data });\n\n    // load user into state\n    dispatch(loadUser());\n  } catch (error) {\n    const { errors } = error?.response?.data;\n\n    if (errors) {\n      errors.forEach((error, i) =>\n        dispatch(setAlert(error.msg, 'danger', (i + 1) * 1000))\n      );\n    }\n\n    dispatch({ type: REGISTER_FAIL });\n  }\n};\n\nexport const logout = () => async dispatch => {\n  dispatch({ type: LOGOUT });\n  dispatch({ type: CLEAR_PROFILE });\n  dispatch({ type: CLEAR_WORKOUT });\n};\n"]},"metadata":{},"sourceType":"module"}