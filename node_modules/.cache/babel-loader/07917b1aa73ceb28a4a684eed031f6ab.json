{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saisr\\\\Desktop\\\\exercise-tracker-master\\\\client\\\\src\\\\components\\\\containers\\\\CreateWorkout.js\";\nimport React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Column } from '../grid/Column';\nimport { H1, H2 } from '../typography/Headings';\nimport { Divider } from '../layout/Divider';\nimport { Box } from '../grid/Box';\nimport { Row } from '../grid/Row';\nimport { TextInput } from '../forms/TextInput';\nimport { Copy } from '../typography/Copy';\nimport { Button } from '../buttons/Button';\nimport { postWorkout as postWorkoutAction } from '../../actions/workout';\nimport { setAlert as setAlertAction } from '../../actions/alert';\nconst Container = styled.div`\n  margin-top: 48px;\n  background-color: ${({\n  theme\n}) => theme.darkerGrey};\n  padding: 24px;\n  position: relative;\n  @media (max-width: 768px) {\n    padding: 12px 6px;\n  }\n`;\nconst FormContainer = styled(Box)`\n  background-color: ${({\n  theme\n}) => theme.darkestGrey};\n  border-radius: 5px;\n  padding: 24px;\n  margin: 24px;\n  width: calc(100% - 48px);\n`;\nconst InputRow = styled(Row)`\n  background-color: ${({\n  theme\n}) => theme.darkerGrey};\n  padding: 12px;\n`;\nconst StyledRow = styled(Row)`\n  @media (max-width: 768px) {\n    justify-content: center;\n  }\n`;\nconst NumberCopy = styled(Copy)`\n  color: ${({\n  theme,\n  color\n}) => color || theme.darkestGrey};\n`;\nconst RoutineNumberSegment = styled(Box)`\n  width: 50px;\n  height: 50px;\n  display: flex;\n  align-self: flex-start;\n  align-items: center;\n  background-color: ${({\n  theme\n}) => theme.primaryColor};\n  border-radius: 25px;\n  text-align: center;\n  justify-content: center;\n  margin-top: 6px;\n\n  ${({\n  small\n}) => small && css`\n      width: 30px;\n      height: 30px;\n      border-radius: 0px;\n      font-size: 12px;\n      background-color: ${({\n  theme\n}) => theme.grey};\n    `}\n`;\nconst RoutineSegment = styled(Box)`\n  width: 90%;\n  padding: 6px 0px 12px 0px;\n`;\nconst RoutineRow = styled(Row)`\n  display: flex;\n  justify-content: space-around;\n  padding: 12px;\n  background-color: ${({\n  index,\n  theme\n}) => index % 2 === 0 && theme.darkerGrey};\n  @media (max-width: 768px) {\n    align-items: flex-start;\n  }\n`;\nconst RoutineContainer = styled(Box)`\n  width: 50px;\n`;\nconst RoutineDetailsContainer = styled(Row)`\n  width: calc(95% - 50px);\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\nconst RoutineDetailContainer = styled(Box)`\n  width: 50%;\n  @media (max-width: 768px) {\n    width: 100%;\n    padding: 0px 0px 24px;\n  }\n`;\nconst ButtonRow = styled(Row)`\n  display: flex;\n  justify-content: center;\n`;\n\nconst CreateWorkout = ({\n  postWorkout,\n  history,\n  setAlert\n}) => {\n  const initialState = {\n    name: '',\n    description: '',\n    caloriesBurned: 0,\n    exercises: [{\n      name: '',\n      routine: [{\n        reps: 0,\n        weight: 0,\n        set: 1\n      }]\n    }]\n  };\n  const [formData, setFormData] = useState(initialState);\n\n  const onChange = ({\n    target\n  }) => {\n    setFormData({ ...formData,\n      [target.name]: target.value\n    });\n  };\n\n  const {\n    name,\n    description,\n    caloriesBurned,\n    exercises\n  } = formData;\n\n  const addAnotherExercise = () => {\n    setFormData({ ...formData,\n      exercises: [...exercises, {\n        name: '',\n        routine: [{\n          reps: 0,\n          weight: 0,\n          set: 1\n        }]\n      }]\n    });\n  };\n\n  const addAnotherSet = exerciseIndex => {\n    const newExercises = [...exercises];\n    newExercises[exerciseIndex].routine = [...newExercises[exerciseIndex].routine, {\n      reps: 0,\n      weight: 0,\n      set: newExercises[exerciseIndex].routine.length + 1\n    }];\n    setFormData({ ...formData,\n      exercises: newExercises\n    });\n  };\n\n  const updateExerciseName = ({\n    target\n  }, exerciseIndex) => {\n    const newExercises = [...exercises];\n    newExercises[exerciseIndex].name = target.value;\n    setFormData({ ...formData,\n      exercises: newExercises\n    });\n  };\n\n  const updateExerciseRoutine = ({\n    target: {\n      value\n    }\n  }, exerciseIndex, routineIndex, type) => {\n    const newFormData = { ...formData\n    };\n\n    _.set(newFormData, `exercises[${exerciseIndex}].routine[${routineIndex}][${type}]`, value); // exerciseToUpdate[exerciseIndex].routine[routineIndex][type] = value;\n    // const routineToUpdate = exerciseToUpdate.routine[routineIndex];\n    // routineToUpdate[type] = target.value;\n    // exerciseToUpdate.routine[routineIndex] = routineToUpdate;\n    // console.log({ exercises, newFormData });\n\n\n    setFormData(newFormData);\n  };\n\n  const onSubmit = () => {\n    if (!name || !description || !caloriesBurned) {\n      setAlert('Invalid Data', 'danger', 2000);\n    } else {\n      postWorkout(formData, history);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(H1, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, \"Create Workout\"), /*#__PURE__*/React.createElement(Divider, {\n    color: \"grey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    type: \"text\",\n    id: \"name\",\n    label: \"Name\",\n    value: name,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(InputRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    type: \"text\",\n    id: \"description\",\n    label: \"Description\",\n    value: description,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(InputRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    type: \"number\",\n    id: \"caloriesBurned\",\n    label: \"Calories Burned\",\n    value: caloriesBurned,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(H2, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }, \"Exercises\"), /*#__PURE__*/React.createElement(Divider, {\n    color: \"grey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }\n  }, exercises.map(({\n    routine,\n    name: exerciseName\n  }, exerciseIndex) => /*#__PURE__*/React.createElement(StyledRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(RoutineNumberSegment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(NumberCopy, {\n    large: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }\n  }, exerciseIndex + 1)), /*#__PURE__*/React.createElement(RoutineSegment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    type: \"text\",\n    id: `exercise${exerciseIndex + 1}`,\n    label: \"Exercise Name\",\n    value: exerciseName,\n    onChange: e => updateExerciseName(e, exerciseIndex),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 19\n    }\n  })), routine.map(({\n    reps,\n    weight\n  }, routineIndex) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(RoutineRow, {\n    index: routineIndex + 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(RoutineContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(RoutineNumberSegment, {\n    small: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NumberCopy, {\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 27\n    }\n  }, routineIndex + 1))), /*#__PURE__*/React.createElement(RoutineDetailsContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(RoutineDetailContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    type: \"number\",\n    id: `exercise${exerciseIndex + 1}-routine${routineIndex + 1}-reps`,\n    label: \"Reps\",\n    value: reps,\n    onChange: e => updateExerciseRoutine(e, exerciseIndex, routineIndex, 'reps'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(RoutineDetailContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    type: \"number\",\n    id: `exercise${exerciseIndex + 1}-routine${routineIndex + 1}-weight`,\n    label: \"Weight\",\n    value: weight,\n    onChange: e => updateExerciseRoutine(e, exerciseIndex, routineIndex, 'weight'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 27\n    }\n  })))))), /*#__PURE__*/React.createElement(RoutineRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    onClick: () => addAnotherSet(exerciseIndex),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 19\n    }\n  }, \"Another Set\"))))), /*#__PURE__*/React.createElement(ButtonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: addAnotherExercise,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }\n  }, \"Another Exercise\"))), /*#__PURE__*/React.createElement(InputRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 11\n    }\n  }, \"Add Workout\"))));\n};\n\nCreateWorkout.propTypes = {\n  postWorkout: PropTypes.func,\n  history: PropTypes.object,\n  setAlert: PropTypes.func\n};\nexport default connect(null, {\n  postWorkout: postWorkoutAction,\n  setAlert: setAlertAction\n})(CreateWorkout);","map":{"version":3,"sources":["C:/Users/saisr/Desktop/exercise-tracker-master/client/src/components/containers/CreateWorkout.js"],"names":["React","useState","styled","css","PropTypes","connect","_","Column","H1","H2","Divider","Box","Row","TextInput","Copy","Button","postWorkout","postWorkoutAction","setAlert","setAlertAction","Container","div","theme","darkerGrey","FormContainer","darkestGrey","InputRow","StyledRow","NumberCopy","color","RoutineNumberSegment","primaryColor","small","grey","RoutineSegment","RoutineRow","index","RoutineContainer","RoutineDetailsContainer","RoutineDetailContainer","ButtonRow","CreateWorkout","history","initialState","name","description","caloriesBurned","exercises","routine","reps","weight","set","formData","setFormData","onChange","target","value","addAnotherExercise","addAnotherSet","exerciseIndex","newExercises","length","updateExerciseName","updateExerciseRoutine","routineIndex","type","newFormData","onSubmit","map","exerciseName","e","propTypes","func","object"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport { Column } from '../grid/Column';\nimport { H1, H2 } from '../typography/Headings';\nimport { Divider } from '../layout/Divider';\nimport { Box } from '../grid/Box';\nimport { Row } from '../grid/Row';\nimport { TextInput } from '../forms/TextInput';\nimport { Copy } from '../typography/Copy';\nimport { Button } from '../buttons/Button';\nimport { postWorkout as postWorkoutAction } from '../../actions/workout';\nimport { setAlert as setAlertAction } from '../../actions/alert';\n\nconst Container = styled.div`\n  margin-top: 48px;\n  background-color: ${({ theme }) => theme.darkerGrey};\n  padding: 24px;\n  position: relative;\n  @media (max-width: 768px) {\n    padding: 12px 6px;\n  }\n`;\n\nconst FormContainer = styled(Box)`\n  background-color: ${({ theme }) => theme.darkestGrey};\n  border-radius: 5px;\n  padding: 24px;\n  margin: 24px;\n  width: calc(100% - 48px);\n`;\n\nconst InputRow = styled(Row)`\n  background-color: ${({ theme }) => theme.darkerGrey};\n  padding: 12px;\n`;\n\nconst StyledRow = styled(Row)`\n  @media (max-width: 768px) {\n    justify-content: center;\n  }\n`;\n\nconst NumberCopy = styled(Copy)`\n  color: ${({ theme, color }) => color || theme.darkestGrey};\n`;\n\nconst RoutineNumberSegment = styled(Box)`\n  width: 50px;\n  height: 50px;\n  display: flex;\n  align-self: flex-start;\n  align-items: center;\n  background-color: ${({ theme }) => theme.primaryColor};\n  border-radius: 25px;\n  text-align: center;\n  justify-content: center;\n  margin-top: 6px;\n\n  ${({ small }) =>\n    small &&\n    css`\n      width: 30px;\n      height: 30px;\n      border-radius: 0px;\n      font-size: 12px;\n      background-color: ${({ theme }) => theme.grey};\n    `}\n`;\n\nconst RoutineSegment = styled(Box)`\n  width: 90%;\n  padding: 6px 0px 12px 0px;\n`;\n\nconst RoutineRow = styled(Row)`\n  display: flex;\n  justify-content: space-around;\n  padding: 12px;\n  background-color: ${({ index, theme }) =>\n    index % 2 === 0 && theme.darkerGrey};\n  @media (max-width: 768px) {\n    align-items: flex-start;\n  }\n`;\n\nconst RoutineContainer = styled(Box)`\n  width: 50px;\n`;\n\nconst RoutineDetailsContainer = styled(Row)`\n  width: calc(95% - 50px);\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nconst RoutineDetailContainer = styled(Box)`\n  width: 50%;\n  @media (max-width: 768px) {\n    width: 100%;\n    padding: 0px 0px 24px;\n  }\n`;\n\nconst ButtonRow = styled(Row)`\n  display: flex;\n  justify-content: center;\n`;\n\nconst CreateWorkout = ({ postWorkout, history, setAlert }) => {\n  const initialState = {\n    name: '',\n    description: '',\n    caloriesBurned: 0,\n    exercises: [{ name: '', routine: [{ reps: 0, weight: 0, set: 1 }] }],\n  };\n  const [formData, setFormData] = useState(initialState);\n  const onChange = ({ target }) => {\n    setFormData({\n      ...formData,\n      [target.name]: target.value,\n    });\n  };\n\n  const { name, description, caloriesBurned, exercises } = formData;\n\n  const addAnotherExercise = () => {\n    setFormData({\n      ...formData,\n      exercises: [\n        ...exercises,\n        { name: '', routine: [{ reps: 0, weight: 0, set: 1 }] },\n      ],\n    });\n  };\n\n  const addAnotherSet = exerciseIndex => {\n    const newExercises = [...exercises];\n    newExercises[exerciseIndex].routine = [\n      ...newExercises[exerciseIndex].routine,\n      {\n        reps: 0,\n        weight: 0,\n        set: newExercises[exerciseIndex].routine.length + 1,\n      },\n    ];\n    setFormData({ ...formData, exercises: newExercises });\n  };\n\n  const updateExerciseName = ({ target }, exerciseIndex) => {\n    const newExercises = [...exercises];\n    newExercises[exerciseIndex].name = target.value;\n    setFormData({ ...formData, exercises: newExercises });\n  };\n\n  const updateExerciseRoutine = (\n    { target: { value } },\n    exerciseIndex,\n    routineIndex,\n    type\n  ) => {\n    const newFormData = { ...formData };\n    _.set(\n      newFormData,\n      `exercises[${exerciseIndex}].routine[${routineIndex}][${type}]`,\n      value\n    );\n    // exerciseToUpdate[exerciseIndex].routine[routineIndex][type] = value;\n    // const routineToUpdate = exerciseToUpdate.routine[routineIndex];\n    // routineToUpdate[type] = target.value;\n    // exerciseToUpdate.routine[routineIndex] = routineToUpdate;\n    // console.log({ exercises, newFormData });\n    setFormData(newFormData);\n  };\n\n  const onSubmit = () => {\n    if (!name || !description || !caloriesBurned) {\n      setAlert('Invalid Data', 'danger', 2000);\n    } else {\n      postWorkout(formData, history);\n    }\n  };\n  return (\n    <Container>\n      <Column>\n        <H1 color=\"primary\">Create Workout</H1>\n        <Divider color=\"grey\" />\n      </Column>\n      <FormContainer>\n        <InputRow>\n          <TextInput\n            type=\"text\"\n            id=\"name\"\n            label=\"Name\"\n            value={name}\n            onChange={onChange}\n          />\n        </InputRow>\n        <InputRow>\n          <TextInput\n            type=\"text\"\n            id=\"description\"\n            label=\"Description\"\n            value={description}\n            onChange={onChange}\n          />\n        </InputRow>\n        <InputRow>\n          <TextInput\n            type=\"number\"\n            id=\"caloriesBurned\"\n            label=\"Calories Burned\"\n            value={caloriesBurned}\n            onChange={onChange}\n          />\n        </InputRow>\n        <Row>\n          <Box>\n            <H2>Exercises</H2>\n            <Divider color=\"grey\" />\n          </Box>\n        </Row>\n        <Row>\n          {exercises.map(({ routine, name: exerciseName }, exerciseIndex) => (\n            <StyledRow>\n              <RoutineNumberSegment>\n                <NumberCopy large>{exerciseIndex + 1}</NumberCopy>\n              </RoutineNumberSegment>\n              <RoutineSegment>\n                <InputRow>\n                  <TextInput\n                    type=\"text\"\n                    id={`exercise${exerciseIndex + 1}`}\n                    label=\"Exercise Name\"\n                    value={exerciseName}\n                    onChange={e => updateExerciseName(e, exerciseIndex)}\n                  />\n                </InputRow>\n                {routine.map(({ reps, weight }, routineIndex) => (\n                  <>\n                    <RoutineRow index={routineIndex + 2}>\n                      <RoutineContainer>\n                        <RoutineNumberSegment small>\n                          <NumberCopy color=\"white\">\n                            {routineIndex + 1}\n                          </NumberCopy>\n                        </RoutineNumberSegment>\n                      </RoutineContainer>\n                      <RoutineDetailsContainer>\n                        <RoutineDetailContainer>\n                          <TextInput\n                            type=\"number\"\n                            id={`exercise${exerciseIndex +\n                              1}-routine${routineIndex + 1}-reps`}\n                            label=\"Reps\"\n                            value={reps}\n                            onChange={e =>\n                              updateExerciseRoutine(\n                                e,\n                                exerciseIndex,\n                                routineIndex,\n                                'reps'\n                              )\n                            }\n                          />\n                        </RoutineDetailContainer>\n                        <RoutineDetailContainer>\n                          <TextInput\n                            type=\"number\"\n                            id={`exercise${exerciseIndex +\n                              1}-routine${routineIndex + 1}-weight`}\n                            label=\"Weight\"\n                            value={weight}\n                            onChange={e =>\n                              updateExerciseRoutine(\n                                e,\n                                exerciseIndex,\n                                routineIndex,\n                                'weight'\n                              )\n                            }\n                          />\n                        </RoutineDetailContainer>\n                      </RoutineDetailsContainer>\n                    </RoutineRow>\n                  </>\n                ))}\n                <RoutineRow>\n                  <Button primary onClick={() => addAnotherSet(exerciseIndex)}>\n                    Another Set\n                  </Button>\n                </RoutineRow>\n              </RoutineSegment>\n            </StyledRow>\n          ))}\n          <ButtonRow>\n            <Button onClick={addAnotherExercise}>Another Exercise</Button>\n          </ButtonRow>\n        </Row>\n        <InputRow>\n          <Button onClick={onSubmit}>Add Workout</Button>\n        </InputRow>\n      </FormContainer>\n    </Container>\n  );\n};\n\nCreateWorkout.propTypes = {\n  postWorkout: PropTypes.func,\n  history: PropTypes.object,\n  setAlert: PropTypes.func,\n};\n\nexport default connect(null, {\n  postWorkout: postWorkoutAction,\n  setAlert: setAlertAction,\n})(CreateWorkout);\n"]},"metadata":{},"sourceType":"module"}