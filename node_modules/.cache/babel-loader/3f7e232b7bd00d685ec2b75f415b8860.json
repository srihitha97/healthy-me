{"ast":null,"code":"import axios from 'axios';\nimport { GET_PROFILE, GET_PROFILES, PROFILE_ERROR } from './types';\nimport { setAlert } from './alert';\nexport const getProfile = profileId => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profiles/${profileId}`);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (error) {\n    var _error$response, _error$response2;\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.statusText,\n        status: error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status\n      }\n    });\n  }\n};\nexport const getProfiles = () => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profiles/`);\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (error) {\n    var _error$response3, _error$response4;\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error === null || error === void 0 ? void 0 : (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.statusText,\n        status: error === null || error === void 0 ? void 0 : (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status\n      }\n    });\n  }\n};\nexport const updateProfile = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.patch('/api/profiles', formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    history.push('/profile');\n  } catch (error) {\n    var _error$response5;\n\n    const {\n      errors\n    } = error === null || error === void 0 ? void 0 : (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data;\n\n    if (errors) {\n      errors.forEach((error, i) => dispatch(setAlert(error.msg, 'danger', (i + 1) * 1000)));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.statusText,\n        // should give us the error text\n        status: error.response.status\n      }\n    });\n  }\n};\nexport const createProfile = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/profiles', formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    history.push('/profile');\n  } catch (error) {\n    var _error$response6;\n\n    const {\n      errors\n    } = error === null || error === void 0 ? void 0 : (_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data;\n\n    if (errors) {\n      errors.forEach((error, i) => dispatch(setAlert(error.msg, 'danger', (i + 1) * 1000)));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.statusText,\n        // should give us the error text\n        status: error.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/saisr/Desktop/exercise-tracker-master/client/src/actions/profile.js"],"names":["axios","GET_PROFILE","GET_PROFILES","PROFILE_ERROR","setAlert","getProfile","profileId","dispatch","res","get","type","payload","data","error","msg","response","statusText","status","getProfiles","updateProfile","formData","history","config","headers","patch","push","errors","forEach","i","createProfile","post"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { GET_PROFILE, GET_PROFILES, PROFILE_ERROR } from './types';\nimport { setAlert } from './alert';\n\nexport const getProfile = profileId => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profiles/${profileId}`);\n    dispatch({ type: GET_PROFILE, payload: res.data });\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error?.response?.statusText,\n        status: error?.response?.status,\n      },\n    });\n  }\n};\n\nexport const getProfiles = () => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profiles/`);\n    dispatch({ type: GET_PROFILES, payload: res.data });\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error?.response?.statusText,\n        status: error?.response?.status,\n      },\n    });\n  }\n};\n\nexport const updateProfile = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const res = await axios.patch('/api/profiles', formData, config);\n\n    dispatch({ type: GET_PROFILE, payload: res.data });\n\n    history.push('/profile');\n  } catch (error) {\n    const { errors } = error?.response?.data;\n    if (errors) {\n      errors.forEach((error, i) =>\n        dispatch(setAlert(error.msg, 'danger', (i + 1) * 1000))\n      );\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.statusText, // should give us the error text\n        status: error.response.status,\n      },\n    });\n  }\n};\n\nexport const createProfile = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const res = await axios.post('/api/profiles', formData, config);\n\n    dispatch({ type: GET_PROFILE, payload: res.data });\n\n    history.push('/profile');\n  } catch (error) {\n    const { errors } = error?.response?.data;\n    if (errors) {\n      errors.forEach((error, i) =>\n        dispatch(setAlert(error.msg, 'danger', (i + 1) * 1000))\n      );\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.statusText, // should give us the error text\n        status: error.response.status,\n      },\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}