{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saisr\\\\Desktop\\\\exercise-tracker-master\\\\client\\\\src\\\\components\\\\containers\\\\Workout.js\";\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getWorkout as getWorkoutAction } from '../../actions/workout';\nimport { Column } from '../grid/Column';\nimport { Divider } from '../layout/Divider';\nimport { H1, H3, H4, H6 } from '../typography/Headings';\nimport { Copy } from '../typography/Copy';\nimport { Image } from '../image/Image';\nimport Spinner from '../layout/Spinner';\nimport { Row } from '../grid/Row';\nimport { Box } from '../grid/Box';\nimport { TextLink } from '../link/TextLink';\nconst Container = styled.div`\n  margin-top: 48px;\n  background-color: ${({\n  theme\n}) => theme.darkerGrey};\n  padding: 24px;\n  position: relative;\n`;\nconst AvatarColumn = styled(Column)`\n  width: 25%;\n  margin: 48px auto;\n\n  @media (max-width: 768px) {\n    width: 80%;\n  }\n`;\nconst StyledRow = styled(Row)`\n  @media (max-width: 768px) {\n    justify-content: center;\n  }\n`;\nconst DetailsSegment = styled(Column)`\n  background-color: ${({\n  theme\n}) => theme.darkestGrey};\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n  width: 80%;\n  margin: 0 auto;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\nconst Label = styled(H6)`\n  background-color: ${({\n  theme\n}) => theme.darkerGrey};\n  margin: 12px 12px 12px 0px;\n  padding: 12px;\n  display: inline-block;\n  border-radius: 5px;\n  width: 33.33%;\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\nconst RoutineNumberSegment = styled(Box)`\n  width: 50px;\n  height: 50px;\n  display: flex;\n  align-self: flex-start;\n  align-items: center;\n  background-color: ${({\n  theme\n}) => theme.primaryColor};\n  border-radius: 25px;\n  text-align: center;\n  justify-content: center;\n  margin-top: 6px;\n`;\nconst NumberCopy = styled(Copy)`\n  color: ${({\n  theme\n}) => theme.darkestGrey};\n`;\nconst RoutineSegment = styled(Box)`\n  width: 90%;\n  padding: 0px 24px 12px 24px;\n\n  @media (max-width: 768px) {\n    text-align: center;\n  }\n`;\nconst RoutineRow = styled(Row)`\n  display: flex;\n  justify-content: space-around;\n  padding: 12px;\n  border-radius: 5px;\n  background-color: ${({\n  index,\n  theme\n}) => index % 2 === 0 && theme.darkerGrey};\n  @media (max-width: 768px) {\n    width: 100%;\n    margin-bottom: 12px;\n  }\n`;\nconst RoutineCopy = styled(Copy)`\n  width: 33.33%;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst Workout = ({\n  workout: {\n    workout,\n    loading\n  },\n  getWorkout,\n  match: {\n    params\n  }\n}) => {\n  var _workout$user, _workout$user2, _workout$user3, _workout$user4, _workout$user5, _workout$exercises;\n\n  useEffect(() => {\n    getWorkout(params.id); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (loading && !workout) {\n    return /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(H1, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, workout === null || workout === void 0 ? void 0 : workout.name), /*#__PURE__*/React.createElement(Divider, {\n    color: \"grey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(AvatarColumn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: `/assets/${workout === null || workout === void 0 ? void 0 : (_workout$user = workout.user) === null || _workout$user === void 0 ? void 0 : _workout$user.avatar}.png`,\n    alt: workout === null || workout === void 0 ? void 0 : (_workout$user2 = workout.user) === null || _workout$user2 === void 0 ? void 0 : _workout$user2.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(DetailsSegment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StyledRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    as: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, \"Calories Burned:\"), /*#__PURE__*/React.createElement(Copy, {\n    color: \"primary\",\n    large: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, workout === null || workout === void 0 ? void 0 : workout.caloriesBurned)), /*#__PURE__*/React.createElement(StyledRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    as: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, \"Description:\"), /*#__PURE__*/React.createElement(Copy, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, workout === null || workout === void 0 ? void 0 : workout.description)), /*#__PURE__*/React.createElement(StyledRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    as: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, \"Author:\"), /*#__PURE__*/React.createElement(TextLink, {\n    to: `/profile/${workout === null || workout === void 0 ? void 0 : (_workout$user3 = workout.user) === null || _workout$user3 === void 0 ? void 0 : _workout$user3._id}`,\n    routerLink: true,\n    color: \" #E1E1E1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, workout === null || workout === void 0 ? void 0 : (_workout$user4 = workout.user) === null || _workout$user4 === void 0 ? void 0 : _workout$user4.firstName, \" \", workout === null || workout === void 0 ? void 0 : (_workout$user5 = workout.user) === null || _workout$user5 === void 0 ? void 0 : _workout$user5.lastName)), /*#__PURE__*/React.createElement(StyledRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(H3, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, \"Exercises\"), /*#__PURE__*/React.createElement(Divider, {\n    color: \"grey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }), (workout === null || workout === void 0 ? void 0 : (_workout$exercises = workout.exercises) === null || _workout$exercises === void 0 ? void 0 : _workout$exercises.length) && workout.exercises.map(({\n    routine,\n    name\n  }, index) => /*#__PURE__*/React.createElement(StyledRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(RoutineNumberSegment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(NumberCopy, {\n    large: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 19\n    }\n  }, index + 1)), /*#__PURE__*/React.createElement(RoutineSegment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(H4, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 19\n    }\n  }, name), routine.map(({\n    reps,\n    weight\n  }, routineIndex) => /*#__PURE__*/React.createElement(RoutineRow, {\n    index: routineIndex + 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(RoutineCopy, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 23\n    }\n  }, \"Reps: \", reps), /*#__PURE__*/React.createElement(RoutineCopy, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 23\n    }\n  }, \"Weight: \", weight)))))))));\n};\n\nWorkout.propTypes = {\n  getWorkout: PropTypes.func,\n  workout: PropTypes.object,\n  match: PropTypes.object\n};\n\nconst mapState = state => ({\n  workout: state.workout\n});\n\nexport default connect(mapState, {\n  getWorkout: getWorkoutAction\n})(Workout);","map":{"version":3,"sources":["C:/Users/saisr/Desktop/exercise-tracker-master/client/src/components/containers/Workout.js"],"names":["React","useEffect","styled","connect","PropTypes","getWorkout","getWorkoutAction","Column","Divider","H1","H3","H4","H6","Copy","Image","Spinner","Row","Box","TextLink","Container","div","theme","darkerGrey","AvatarColumn","StyledRow","DetailsSegment","darkestGrey","Label","RoutineNumberSegment","primaryColor","NumberCopy","RoutineSegment","RoutineRow","index","RoutineCopy","Workout","workout","loading","match","params","id","name","user","avatar","caloriesBurned","description","_id","firstName","lastName","exercises","length","map","routine","reps","weight","routineIndex","propTypes","func","object","mapState","state"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { getWorkout as getWorkoutAction } from '../../actions/workout';\nimport { Column } from '../grid/Column';\nimport { Divider } from '../layout/Divider';\nimport { H1, H3, H4, H6 } from '../typography/Headings';\nimport { Copy } from '../typography/Copy';\nimport { Image } from '../image/Image';\nimport Spinner from '../layout/Spinner';\nimport { Row } from '../grid/Row';\nimport { Box } from '../grid/Box';\nimport { TextLink } from '../link/TextLink';\n\nconst Container = styled.div`\n  margin-top: 48px;\n  background-color: ${({ theme }) => theme.darkerGrey};\n  padding: 24px;\n  position: relative;\n`;\n\nconst AvatarColumn = styled(Column)`\n  width: 25%;\n  margin: 48px auto;\n\n  @media (max-width: 768px) {\n    width: 80%;\n  }\n`;\n\nconst StyledRow = styled(Row)`\n  @media (max-width: 768px) {\n    justify-content: center;\n  }\n`;\n\nconst DetailsSegment = styled(Column)`\n  background-color: ${({ theme }) => theme.darkestGrey};\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n  width: 80%;\n  margin: 0 auto;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst Label = styled(H6)`\n  background-color: ${({ theme }) => theme.darkerGrey};\n  margin: 12px 12px 12px 0px;\n  padding: 12px;\n  display: inline-block;\n  border-radius: 5px;\n  width: 33.33%;\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst RoutineNumberSegment = styled(Box)`\n  width: 50px;\n  height: 50px;\n  display: flex;\n  align-self: flex-start;\n  align-items: center;\n  background-color: ${({ theme }) => theme.primaryColor};\n  border-radius: 25px;\n  text-align: center;\n  justify-content: center;\n  margin-top: 6px;\n`;\n\nconst NumberCopy = styled(Copy)`\n  color: ${({ theme }) => theme.darkestGrey};\n`;\n\nconst RoutineSegment = styled(Box)`\n  width: 90%;\n  padding: 0px 24px 12px 24px;\n\n  @media (max-width: 768px) {\n    text-align: center;\n  }\n`;\n\nconst RoutineRow = styled(Row)`\n  display: flex;\n  justify-content: space-around;\n  padding: 12px;\n  border-radius: 5px;\n  background-color: ${({ index, theme }) =>\n    index % 2 === 0 && theme.darkerGrey};\n  @media (max-width: 768px) {\n    width: 100%;\n    margin-bottom: 12px;\n  }\n`;\n\nconst RoutineCopy = styled(Copy)`\n  width: 33.33%;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst Workout = ({\n  workout: { workout, loading },\n  getWorkout,\n  match: { params },\n}) => {\n  useEffect(() => {\n    getWorkout(params.id);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (loading && !workout) {\n    return <Spinner />;\n  }\n\n  return (\n    <Container>\n      <Column>\n        <H1 color=\"primary\">{workout?.name}</H1>\n        <Divider color=\"grey\" />\n      </Column>\n      <AvatarColumn>\n        <Image\n          src={`/assets/${workout?.user?.avatar}.png`}\n          alt={workout?.user?.avatar}\n        />\n      </AvatarColumn>\n      <DetailsSegment>\n        <StyledRow>\n          <Label as=\"h2\">Calories Burned:</Label>\n          <Copy color=\"primary\" large>\n            {workout?.caloriesBurned}\n          </Copy>\n        </StyledRow>\n        <StyledRow>\n          <Label as=\"h2\">Description:</Label>\n          <Copy>{workout?.description}</Copy>\n        </StyledRow>\n        <StyledRow>\n          <Label as=\"h2\">Author:</Label>\n          <TextLink\n            to={`/profile/${workout?.user?._id}`}\n            routerLink\n            color=\" #E1E1E1\"\n          >\n            {workout?.user?.firstName} {workout?.user?.lastName}\n          </TextLink>\n        </StyledRow>\n        <StyledRow>\n          <H3>Exercises</H3>\n          <Divider color=\"grey\" />\n          {workout?.exercises?.length &&\n            workout.exercises.map(({ routine, name }, index) => (\n              <StyledRow>\n                <RoutineNumberSegment>\n                  <NumberCopy large>{index + 1}</NumberCopy>\n                </RoutineNumberSegment>\n                <RoutineSegment>\n                  <H4>{name}</H4>\n                  {routine.map(({ reps, weight }, routineIndex) => (\n                    <RoutineRow index={routineIndex + 2}>\n                      <RoutineCopy>Reps: {reps}</RoutineCopy>\n                      <RoutineCopy>Weight: {weight}</RoutineCopy>\n                    </RoutineRow>\n                  ))}\n                </RoutineSegment>\n              </StyledRow>\n            ))}\n        </StyledRow>\n      </DetailsSegment>\n    </Container>\n  );\n};\n\nWorkout.propTypes = {\n  getWorkout: PropTypes.func,\n  workout: PropTypes.object,\n  match: PropTypes.object,\n};\n\nconst mapState = state => ({\n  workout: state.workout,\n});\n\nexport default connect(mapState, { getWorkout: getWorkoutAction })(Workout);\n"]},"metadata":{},"sourceType":"module"}