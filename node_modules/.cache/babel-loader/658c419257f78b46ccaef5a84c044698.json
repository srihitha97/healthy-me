{"ast":null,"code":"import axios from 'axios';\nimport { GET_WORKOUTS, WORKOUT_ERROR, GET_WORKOUT } from './types';\nimport { setAlert } from './alert';\nexport const getWorkoutsByUser = userId => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios.get(`/api/workouts/user/${userId}`);\n    dispatch({\n      type: GET_WORKOUTS,\n      payload: data\n    });\n  } catch (error) {\n    var _error$response, _error$response2;\n\n    dispatch({\n      type: WORKOUT_ERROR,\n      payload: {\n        msg: error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.statusText,\n        code: error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.statusCode\n      }\n    });\n  }\n};\nexport const getWorkouts = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios.get(`/api/workouts`);\n    dispatch({\n      type: GET_WORKOUTS,\n      payload: data\n    });\n  } catch (error) {\n    var _error$response3, _error$response4;\n\n    dispatch({\n      type: WORKOUT_ERROR,\n      payload: {\n        msg: error === null || error === void 0 ? void 0 : (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.statusText,\n        code: error === null || error === void 0 ? void 0 : (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.statusCode\n      }\n    });\n  }\n};\nexport const getWorkout = workoutId => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios.get(`/api/workouts/${workoutId}`);\n    dispatch({\n      type: GET_WORKOUT,\n      payload: data\n    });\n  } catch (error) {\n    var _error$response5, _error$response6;\n\n    dispatch({\n      type: WORKOUT_ERROR,\n      payload: {\n        msg: error === null || error === void 0 ? void 0 : (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.statusText,\n        code: error === null || error === void 0 ? void 0 : (_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.statusCode\n      }\n    });\n  }\n};\nexport const postWorkout = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    await axios.post('/api/workouts', formData, config);\n    history.push('/dashboard');\n  } catch (error) {\n    var _error$response7, _error$response8, _error$response9, _error$response10;\n\n    console.log({\n      error: error === null || error === void 0 ? void 0 : (_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data\n    });\n    const {\n      errors\n    } = error === null || error === void 0 ? void 0 : (_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data;\n\n    if (errors) {\n      errors.forEach((error, i) => dispatch(setAlert(error.msg, 'danger', (i + 1) * 1000)));\n    }\n\n    dispatch({\n      type: WORKOUT_ERROR,\n      payload: {\n        msg: error === null || error === void 0 ? void 0 : (_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.statusText,\n        code: error === null || error === void 0 ? void 0 : (_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : _error$response10.statusCode\n      }\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/saisr/Desktop/exercise-tracker-master/client/src/actions/workout.js"],"names":["axios","GET_WORKOUTS","WORKOUT_ERROR","GET_WORKOUT","setAlert","getWorkoutsByUser","userId","dispatch","data","get","type","payload","error","msg","response","statusText","code","statusCode","getWorkouts","getWorkout","workoutId","postWorkout","formData","history","config","headers","post","push","console","log","errors","forEach","i"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { GET_WORKOUTS, WORKOUT_ERROR, GET_WORKOUT } from './types';\nimport { setAlert } from './alert';\n\nexport const getWorkoutsByUser = userId => async dispatch => {\n  try {\n    const { data } = await axios.get(`/api/workouts/user/${userId}`);\n    dispatch({\n      type: GET_WORKOUTS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: WORKOUT_ERROR,\n      payload: {\n        msg: error?.response?.statusText,\n        code: error?.response?.statusCode,\n      },\n    });\n  }\n};\n\nexport const getWorkouts = () => async dispatch => {\n  try {\n    const { data } = await axios.get(`/api/workouts`);\n    dispatch({\n      type: GET_WORKOUTS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: WORKOUT_ERROR,\n      payload: {\n        msg: error?.response?.statusText,\n        code: error?.response?.statusCode,\n      },\n    });\n  }\n};\n\nexport const getWorkout = workoutId => async dispatch => {\n  try {\n    const { data } = await axios.get(`/api/workouts/${workoutId}`);\n    dispatch({\n      type: GET_WORKOUT,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: WORKOUT_ERROR,\n      payload: {\n        msg: error?.response?.statusText,\n        code: error?.response?.statusCode,\n      },\n    });\n  }\n};\n\nexport const postWorkout = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    await axios.post('/api/workouts', formData, config);\n\n    history.push('/dashboard');\n  } catch (error) {\n    console.log({ error: error?.response?.data });\n    const { errors } = error?.response?.data;\n    if (errors) {\n      errors.forEach((error, i) =>\n        dispatch(setAlert(error.msg, 'danger', (i + 1) * 1000))\n      );\n    }\n    dispatch({\n      type: WORKOUT_ERROR,\n      payload: {\n        msg: error?.response?.statusText,\n        code: error?.response?.statusCode,\n      },\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}