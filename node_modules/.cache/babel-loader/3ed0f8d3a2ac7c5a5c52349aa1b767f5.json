{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saisr\\\\Desktop\\\\exercise-tracker-master\\\\client\\\\src\\\\components\\\\containers\\\\Users.js\";\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport { getProfiles as getProfilesAction } from '../../actions/profile';\nimport { Row } from '../grid/Row';\nimport { Box } from '../grid/Box';\nimport { H3 } from '../typography/Headings';\nimport { Column } from '../grid/Column';\nimport { Divider } from '../layout/Divider';\nimport { Image } from '../image/Image';\nimport { Copy } from '../typography/Copy';\nimport { ButtonLink } from '../link/ButtonLink';\nimport Spinner from '../layout/Spinner';\nconst Container = styled.div`\n  margin-top: 48px;\n  background-color: ${({\n  theme\n}) => theme.darkerGrey};\n  padding: 24px;\n  position: relative;\n`;\nconst HeroRow = styled(Row)`\n  @media (max-width: 768px) {\n    align-items: center;\n    justify-content: center;\n  }\n`;\nconst HeadingContainer = styled(Column)`\n  width: 40%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  position: absolute;\n  background-color: ${({\n  theme\n}) => theme.grey};\n  top: 50%;\n  transform: translateY(-50%);\n  border-radius: 5px;\n  padding: 24px;\n\n  @media (max-width: 768px) {\n    width: 80%;\n    position: relative;\n    top: -50px;\n    transform: inherit;\n    padding-bottom: 24px;\n  }\n`;\nconst ImageContainer = styled(Box)`\n  display: flex;\n  justify-content: flex-end;\n  height: 500px;\n`;\nconst StyledImage = styled(Image)`\n  width: 66.66%;\n  object-fit: cover;\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\nconst ProfilesContainer = styled(Row)`\n  justify-content: center;\n  padding: 48px 0px;\n  align-items: stretch;\n`;\nconst ProfileContainer = styled(Column)`\n  width: calc(33.33% - 24px);\n  margin: 12px 12px;\n  background-color: ${({\n  theme\n}) => theme.grey};\n  border-radius: 5px;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  @media (max-width: 768px) {\n    width: calc(80% - 24px);\n  }\n`;\nconst AvatarContainer = styled(Box)`\n  padding: 24px;\n`;\nconst ButtonContainer = styled(Box)`\n  margin: 24px 0px;\n`;\n\nconst Users = ({\n  getProfiles,\n  profile: {\n    profiles,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getProfiles(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (loading && !(profiles === null || profiles === void 0 ? void 0 : profiles.length)) {\n    return /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    as: \"section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(HeroRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ImageContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StyledImage, {\n    src: \"./assets/users.png\",\n    alt: \"two guys fist bumping\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(HeadingContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(H3, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \"Users\"), /*#__PURE__*/React.createElement(Divider, {\n    color: \"grey\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(ProfilesContainer, {\n    as: \"section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, profiles.length ? profiles.map(profile => {\n    var _profile$user;\n\n    return /*#__PURE__*/React.createElement(ProfileContainer, {\n      key: profile._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(AvatarContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: `/assets/${profile.user.avatar}.png`,\n      alt: `avatar image of ${profile.user.avatar}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(H3, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 19\n      }\n    }, `${profile.user.firstName} ${profile.user.lastName}`), /*#__PURE__*/React.createElement(Copy, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 19\n      }\n    }, \"Member Since:\", ' ', /*#__PURE__*/React.createElement(Moment, {\n      format: \"MMM Do, YYYY\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }, profile === null || profile === void 0 ? void 0 : (_profile$user = profile.user) === null || _profile$user === void 0 ? void 0 : _profile$user.date))), /*#__PURE__*/React.createElement(ButtonContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ButtonLink, {\n      routerLink: true,\n      to: `/profile/${profile.user._id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 19\n      }\n    }, \"View Profile\")));\n  }) : null));\n};\n\nUsers.propTypes = {\n  getProfiles: PropTypes.func,\n  profile: PropTypes.object\n};\n\nconst mapState = state => ({\n  profile: state === null || state === void 0 ? void 0 : state.profile\n});\n\nexport default connect(mapState, {\n  getProfiles: getProfilesAction\n})(Users);","map":{"version":3,"sources":["C:/Users/saisr/Desktop/exercise-tracker-master/client/src/components/containers/Users.js"],"names":["React","useEffect","styled","connect","PropTypes","Moment","getProfiles","getProfilesAction","Row","Box","H3","Column","Divider","Image","Copy","ButtonLink","Spinner","Container","div","theme","darkerGrey","HeroRow","HeadingContainer","grey","ImageContainer","StyledImage","ProfilesContainer","ProfileContainer","AvatarContainer","ButtonContainer","Users","profile","profiles","loading","length","map","_id","user","avatar","firstName","lastName","date","propTypes","func","object","mapState","state"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\n\nimport { getProfiles as getProfilesAction } from '../../actions/profile';\n\nimport { Row } from '../grid/Row';\nimport { Box } from '../grid/Box';\nimport { H3 } from '../typography/Headings';\nimport { Column } from '../grid/Column';\nimport { Divider } from '../layout/Divider';\nimport { Image } from '../image/Image';\nimport { Copy } from '../typography/Copy';\nimport { ButtonLink } from '../link/ButtonLink';\nimport Spinner from '../layout/Spinner';\n\nconst Container = styled.div`\n  margin-top: 48px;\n  background-color: ${({ theme }) => theme.darkerGrey};\n  padding: 24px;\n  position: relative;\n`;\n\nconst HeroRow = styled(Row)`\n  @media (max-width: 768px) {\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nconst HeadingContainer = styled(Column)`\n  width: 40%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  position: absolute;\n  background-color: ${({ theme }) => theme.grey};\n  top: 50%;\n  transform: translateY(-50%);\n  border-radius: 5px;\n  padding: 24px;\n\n  @media (max-width: 768px) {\n    width: 80%;\n    position: relative;\n    top: -50px;\n    transform: inherit;\n    padding-bottom: 24px;\n  }\n`;\n\nconst ImageContainer = styled(Box)`\n  display: flex;\n  justify-content: flex-end;\n  height: 500px;\n`;\n\nconst StyledImage = styled(Image)`\n  width: 66.66%;\n  object-fit: cover;\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst ProfilesContainer = styled(Row)`\n  justify-content: center;\n  padding: 48px 0px;\n  align-items: stretch;\n`;\n\nconst ProfileContainer = styled(Column)`\n  width: calc(33.33% - 24px);\n  margin: 12px 12px;\n  background-color: ${({ theme }) => theme.grey};\n  border-radius: 5px;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  @media (max-width: 768px) {\n    width: calc(80% - 24px);\n  }\n`;\n\nconst AvatarContainer = styled(Box)`\n  padding: 24px;\n`;\n\nconst ButtonContainer = styled(Box)`\n  margin: 24px 0px;\n`;\n\nconst Users = ({ getProfiles, profile: { profiles, loading } }) => {\n  useEffect(() => {\n    getProfiles();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (loading && !profiles?.length) {\n    return <Spinner />;\n  }\n  return (\n    <>\n      <Container as=\"section\">\n        <HeroRow>\n          <ImageContainer>\n            <StyledImage src=\"./assets/users.png\" alt=\"two guys fist bumping\" />\n          </ImageContainer>\n          <HeadingContainer>\n            <H3 color=\"primary\">Users</H3>\n            <Divider color=\"grey\" />\n          </HeadingContainer>\n        </HeroRow>\n      </Container>\n\n      <ProfilesContainer as=\"section\">\n        {profiles.length\n          ? profiles.map(profile => (\n              <ProfileContainer key={profile._id}>\n                <AvatarContainer>\n                  <Image\n                    src={`/assets/${profile.user.avatar}.png`}\n                    alt={`avatar image of ${profile.user.avatar}`}\n                  />\n                </AvatarContainer>\n                <Box>\n                  <H3>{`${profile.user.firstName} ${profile.user.lastName}`}</H3>\n                  <Copy>\n                    Member Since:{' '}\n                    <Moment format=\"MMM Do, YYYY\">{profile?.user?.date}</Moment>\n                  </Copy>\n                </Box>\n                <ButtonContainer>\n                  <ButtonLink routerLink to={`/profile/${profile.user._id}`}>\n                    View Profile\n                  </ButtonLink>\n                </ButtonContainer>\n              </ProfileContainer>\n            ))\n          : null}\n      </ProfilesContainer>\n    </>\n  );\n};\n\nUsers.propTypes = {\n  getProfiles: PropTypes.func,\n  profile: PropTypes.object,\n};\n\nconst mapState = state => ({\n  profile: state?.profile,\n});\n\nexport default connect(mapState, { getProfiles: getProfilesAction })(Users);\n"]},"metadata":{},"sourceType":"module"}