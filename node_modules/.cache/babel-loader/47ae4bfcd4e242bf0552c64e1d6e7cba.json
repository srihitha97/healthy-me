{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saisr\\\\Desktop\\\\exercise-tracker-master\\\\client\\\\src\\\\components\\\\containers\\\\Dashboard.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getProfile as getProfileAction } from '../../actions/profile';\nimport { getWorkoutsByUser as getWorkoutsByUserAction } from '../../actions/workout';\nimport { H4, H3 } from '../typography/Headings';\nimport { Box } from '../grid/Box';\nimport { Copy } from '../typography/Copy';\nimport ProgressRing from '../charts/ProgressRing';\nimport Workouts from '../workout/Workouts';\nimport Spinner from '../layout/Spinner';\nimport { ButtonLink } from '../link/ButtonLink';\nconst Container = styled(Box)`\n  padding: 48px 0px;\n`;\nconst InfoBox = styled(Box)`\n  position: relative;\n  background: ${({\n  theme\n}) => theme.primaryColor};\n  height: 500px;\n  text-align: center;\n  border-radius: 5px;\n  margin-bottom: 48px;\n  width: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  padding: 12px;\n\n  @media (max-width: 768px) {\n    height: auto;\n  }\n`;\nconst InfoContainer = styled(Box)`\n  border: 10px solid ${({\n  theme\n}) => theme.grey};\n  height: 100%;\n  border-radius: 5px;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n`;\nconst HeadingContainer = styled(Box)`\n  border: 10px solid #212121;\n  border-radius: 5px;\n  padding: 12px;\n  margin: 12px;\n  width: auto;\n\n  h3 {\n    display: inline-block;\n  }\n`;\nconst StatsContainer = styled(Box)`\n  display: flex;\n  align-items: center;\n  margin: 24px 0px;\n  width: auto;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\nconst StatsBox = styled(Box)`\n  margin: 0px 48px;\n  width: auto;\n\n  @media (max-width: 768px) {\n    margin: 48px 0px;\n  }\n`;\nconst StyledCopy = styled(Copy)`\n  background: #212121;\n  color: ${({\n  theme\n}) => theme.primaryColor};\n`;\n\nconst Dashboard = ({\n  getProfile,\n  profile: {\n    profile,\n    loading: profileLoading\n  },\n  user: {\n    user,\n    loading: userLoading\n  },\n  workouts: {\n    workouts,\n    loading: workoutsLoading\n  },\n  getWorkoutsByUser\n}) => {\n  const [progress, setProgress] = useState(0);\n  const todaysDate = new Date().setHours(0, 0, 0, 0);\n  const todaysWorkouts = workouts.filter(workout => {\n    const formattedWorkoutDate = new Date(workout.date).setHours(0, 0, 0, 0);\n    return formattedWorkoutDate === todaysDate;\n  });\n  const todaysCaloriesBurn = todaysWorkouts.reduce((acc, curr) => acc + curr.caloriesBurned, 0);\n  useEffect(() => {\n    if ((profile === null || profile === void 0 ? void 0 : profile.dailyCaloriesGoal) && (workouts === null || workouts === void 0 ? void 0 : workouts.length)) {\n      const calorieProgress = todaysCaloriesBurn / profile.dailyCaloriesGoal * 100;\n      setTimeout(() => {\n        setProgress(calorieProgress);\n      }, 1000);\n    }\n  }, [profile, todaysCaloriesBurn, workouts]);\n  useEffect(() => {\n    if (user && user._id) {\n      getProfile(user._id);\n      getWorkoutsByUser(user._id);\n    }\n  }, [getProfile, getWorkoutsByUser, user]);\n\n  if (profileLoading && profile === null || userLoading && user === null || workoutsLoading && !workouts.length) {\n    return /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InfoBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InfoContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HeadingContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(H3, {\n    color: \"#3A3A3A\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, \"Your Daily Progress\")), /*#__PURE__*/React.createElement(StatsContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StatsBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(H4, {\n    color: \"#3A3A3A\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, \"Your Goal Burn\"), /*#__PURE__*/React.createElement(StyledCopy, {\n    color: \"#3A3A3A\",\n    large: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  }, (profile === null || profile === void 0 ? void 0 : profile.dailyCaloriesGoal) || 0)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ProgressRing, {\n    progress: progress,\n    size: 250,\n    strokeSize: 30,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(StatsBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(H4, {\n    color: \"#3A3A3A\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, \"Today's Burn\"), /*#__PURE__*/React.createElement(StyledCopy, {\n    color: \"#3A3A3A\",\n    large: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, todaysCaloriesBurn || 0))))), /*#__PURE__*/React.createElement(ButtonLink, {\n    routerLink: true,\n    to: \"/create-workout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, \"Add Workout\"), /*#__PURE__*/React.createElement(Workouts, {\n    profile: profile,\n    workouts: workouts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }));\n};\n\nDashboard.propTypes = {\n  profile: PropTypes.object,\n  getProfile: PropTypes.func,\n  user: PropTypes.object,\n  getWorkoutsByUser: PropTypes.func,\n  workouts: PropTypes.object\n};\n\nconst mapState = ({\n  profile,\n  user,\n  workout\n}) => ({\n  profile,\n  user,\n  workouts: workout\n});\n\nexport default connect(mapState, {\n  getProfile: getProfileAction,\n  getWorkoutsByUser: getWorkoutsByUserAction\n})(Dashboard);","map":{"version":3,"sources":["C:/Users/saisr/Desktop/exercise-tracker-master/client/src/components/containers/Dashboard.js"],"names":["React","useState","useEffect","styled","connect","PropTypes","getProfile","getProfileAction","getWorkoutsByUser","getWorkoutsByUserAction","H4","H3","Box","Copy","ProgressRing","Workouts","Spinner","ButtonLink","Container","InfoBox","theme","primaryColor","InfoContainer","grey","HeadingContainer","StatsContainer","StatsBox","StyledCopy","Dashboard","profile","loading","profileLoading","user","userLoading","workouts","workoutsLoading","progress","setProgress","todaysDate","Date","setHours","todaysWorkouts","filter","workout","formattedWorkoutDate","date","todaysCaloriesBurn","reduce","acc","curr","caloriesBurned","dailyCaloriesGoal","length","calorieProgress","setTimeout","_id","propTypes","object","func","mapState"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { getProfile as getProfileAction } from '../../actions/profile';\nimport { getWorkoutsByUser as getWorkoutsByUserAction } from '../../actions/workout';\n\nimport { H4, H3 } from '../typography/Headings';\nimport { Box } from '../grid/Box';\nimport { Copy } from '../typography/Copy';\nimport ProgressRing from '../charts/ProgressRing';\nimport Workouts from '../workout/Workouts';\nimport Spinner from '../layout/Spinner';\nimport { ButtonLink } from '../link/ButtonLink';\n\nconst Container = styled(Box)`\n  padding: 48px 0px;\n`;\n\nconst InfoBox = styled(Box)`\n  position: relative;\n  background: ${({ theme }) => theme.primaryColor};\n  height: 500px;\n  text-align: center;\n  border-radius: 5px;\n  margin-bottom: 48px;\n  width: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  padding: 12px;\n\n  @media (max-width: 768px) {\n    height: auto;\n  }\n`;\n\nconst InfoContainer = styled(Box)`\n  border: 10px solid ${({ theme }) => theme.grey};\n  height: 100%;\n  border-radius: 5px;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst HeadingContainer = styled(Box)`\n  border: 10px solid #212121;\n  border-radius: 5px;\n  padding: 12px;\n  margin: 12px;\n  width: auto;\n\n  h3 {\n    display: inline-block;\n  }\n`;\n\nconst StatsContainer = styled(Box)`\n  display: flex;\n  align-items: center;\n  margin: 24px 0px;\n  width: auto;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nconst StatsBox = styled(Box)`\n  margin: 0px 48px;\n  width: auto;\n\n  @media (max-width: 768px) {\n    margin: 48px 0px;\n  }\n`;\n\nconst StyledCopy = styled(Copy)`\n  background: #212121;\n  color: ${({ theme }) => theme.primaryColor};\n`;\n\nconst Dashboard = ({\n  getProfile,\n  profile: { profile, loading: profileLoading },\n  user: { user, loading: userLoading },\n  workouts: { workouts, loading: workoutsLoading },\n  getWorkoutsByUser,\n}) => {\n  const [progress, setProgress] = useState(0);\n\n  const todaysDate = new Date().setHours(0, 0, 0, 0);\n  const todaysWorkouts = workouts.filter(workout => {\n    const formattedWorkoutDate = new Date(workout.date).setHours(0, 0, 0, 0);\n    return formattedWorkoutDate === todaysDate;\n  });\n  const todaysCaloriesBurn = todaysWorkouts.reduce(\n    (acc, curr) => acc + curr.caloriesBurned,\n    0\n  );\n\n  useEffect(() => {\n    if (profile?.dailyCaloriesGoal && workouts?.length) {\n      const calorieProgress =\n        (todaysCaloriesBurn / profile.dailyCaloriesGoal) * 100;\n      setTimeout(() => {\n        setProgress(calorieProgress);\n      }, 1000);\n    }\n  }, [profile, todaysCaloriesBurn, workouts]);\n\n  useEffect(() => {\n    if (user && user._id) {\n      getProfile(user._id);\n      getWorkoutsByUser(user._id);\n    }\n  }, [getProfile, getWorkoutsByUser, user]);\n\n  if (\n    (profileLoading && profile === null) ||\n    (userLoading && user === null) ||\n    (workoutsLoading && !workouts.length)\n  ) {\n    return <Spinner />;\n  }\n\n  return (\n    <Container>\n      <InfoBox>\n        <InfoContainer>\n          <HeadingContainer>\n            <H3 color=\"#3A3A3A\">Your Daily Progress</H3>\n          </HeadingContainer>\n          <StatsContainer>\n            <StatsBox>\n              <H4 color=\"#3A3A3A\">Your Goal Burn</H4>\n              <StyledCopy color=\"#3A3A3A\" large>\n                {profile?.dailyCaloriesGoal || 0}\n              </StyledCopy>\n            </StatsBox>\n            <div>\n              <ProgressRing progress={progress} size={250} strokeSize={30} />\n            </div>\n            <StatsBox>\n              <H4 color=\"#3A3A3A\">Today's Burn</H4>\n              <StyledCopy color=\"#3A3A3A\" large>\n                {todaysCaloriesBurn || 0}\n              </StyledCopy>\n            </StatsBox>\n          </StatsContainer>\n        </InfoContainer>\n      </InfoBox>\n\n      <ButtonLink routerLink to=\"/create-workout\">\n        Add Workout\n      </ButtonLink>\n\n      <Workouts profile={profile} workouts={workouts} />\n    </Container>\n  );\n};\n\nDashboard.propTypes = {\n  profile: PropTypes.object,\n  getProfile: PropTypes.func,\n  user: PropTypes.object,\n  getWorkoutsByUser: PropTypes.func,\n  workouts: PropTypes.object,\n};\n\nconst mapState = ({ profile, user, workout }) => ({\n  profile,\n  user,\n  workouts: workout,\n});\n\nexport default connect(mapState, {\n  getProfile: getProfileAction,\n  getWorkoutsByUser: getWorkoutsByUserAction,\n})(Dashboard);\n"]},"metadata":{},"sourceType":"module"}